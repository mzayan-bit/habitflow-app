// lib/main.dart

import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:hive_flutter/hive_flutter.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'firebase_options.dart'; // Generated by FlutterFire CLI
import 'package:habitflow/src/features/auth/presentation/auth_wrapper.dart';
import 'package:habitflow/src/features/habits/domain/habit_model.dart';
import 'package:habitflow/src/shared/services/notification_service.dart';

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();
  
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  
  await Hive.initFlutter();
  // Register your generated adapter
  Hive.registerAdapter(HabitAdapter()); 
  
  final notificationService = NotificationService();
  await notificationService.init();
  await notificationService.requestPermissions();
  
  runApp(
    ProviderScope(
      // We can override the provider to provide the already-initialized instance
      overrides: [
        notificationServiceProvider.overrideWithValue(notificationService),
      ],
      child: const HabitFlowApp(),
    ),
  );
}


class HabitFlowApp extends StatelessWidget {
  const HabitFlowApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'HabitFlow',
      theme: ThemeData(
        primarySwatch: Colors.orange,
        useMaterial3: true, // Recommended for modern UI
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      darkTheme: ThemeData.dark(useMaterial3: true),
      themeMode: ThemeMode.system,
      home: const AuthWrapper(), // Use the AuthWrapper as the home widget
    );
  }
}